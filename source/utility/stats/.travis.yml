
language: c++
sudo: required

matrix:
  include:
    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-5
            - gfortran-5
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && FC=gfortran-5"
      compiler: gcc
    
    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-6
            - gfortran-6
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && FC=gfortran-6"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-7
            - gfortran-7
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && FC=gfortran-7"
        - STATS_TEST_USE_STDVEC="y"
        - CCOV=gcov-7 && CXXCOV=gcov-7
        - STATS_TEST_RUN_COV="y"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-7
            - gfortran-7
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && FC=gfortran-7"
        - STATS_TEST_USE_ARMA="y"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-7
            - gfortran-7
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && FC=gfortran-7"
        - STATS_TEST_USE_BLAZE="y"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-7
            - gfortran-7
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && FC=gfortran-7"
        - STATS_TEST_USE_EIGEN="y"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-8
            - gfortran-8
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && FC=gfortran-8"
      compiler: gcc

    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - g++-9
            - gfortran-9
          sources: &sources
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9 && FC=gfortran-9"
      compiler: gcc

    - os: osx
      osx_image: xcode9
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      compiler: clang

    # - os: linux
    #   dist: bionic
    #   addons:
    #     apt:
    #       packages:
    #         - g++-7
    #         - clang-5.0
    #         - gfortran-7
    #       sources: &sources
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-bionic-5.0
    #   env:
    #     - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0 && FC=gfortran-7"
    #   compiler: clang

before_install:
    - export FC=gfortran
    - eval "${MATRIX_EVAL}"

install:
    - |
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        sudo apt-get update
        sudo apt-get install libblas-dev liblapack-dev
      # else
        # OSX
        # brew upgrade gcc || brew install gcc
      fi

script:
  - cd .. && rm -rf stats
  - git clone https://github.com/kthohr/gcem ./gcem
  - export GCEM_INCLUDE_PATH=$PWD/gcem/include
  - git clone https://github.com/kthohr/stats ./stats
  - cd ./stats/tests
  - ./setup && ./test_setup/run_cov
  - cd ..

after_success:
  - |
    if [[ "${STATS_TEST_RUN_COV}" == "y" ]]; then 
      alias gcov=$CCOV
      bash <(curl -s https://codecov.io/bash) -x $CCOV
    fi

after_failure:
  - ./travis-tool.sh dump_logs

notifications:
  email:
    on_success: change
    on_failure: change
