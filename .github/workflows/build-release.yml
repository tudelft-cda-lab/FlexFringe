name: Build and test
on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: ${{ matrix.os }}-build-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            extension: ".exe"
          - os: ubuntu-latest
            triplet: x64-linux
            extension: ""
          - os: macos-latest
            triplet: x64-osx
            extension: ""

    steps:
      - uses: actions/checkout@v1

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'

      - name: prepare-windows
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: build-windows
        if: runner.os == 'Windows'
        run: |
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release

      - name: build-unix
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)

      - name: rename-binary
        run: |
          cd build
          ls
          mv flexfringe${{ matrix.extension }} flexfringe-${{ matrix.triplet }}${{ matrix.extension}}

      - name: run-tests
        run: build/runtests${{ matrix.extension }} -r junit > testresults-${{ matrix.triplet }}.xml

      - name: publish-test-results-linux
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: runner.os == 'Linux' && always()
        with:
          check_name: "Unit Test Results (${{ matrix.triplet }})"
          files: "testresults-${{ matrix.triplet }}.xml"

      - name: publish-test-results-other
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: runner.os != 'Linux' && always()
        with:
          check_name: "Unit Test Results (${{ matrix.triplet }})"
          files: "testresults-${{ matrix.triplet }}.xml"

      - name: upload-binary-artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'flexfringe-${{ matrix.triplet }}'
          path: '${{ runner.workspace }}/FlexFringe/build/flexfringe-${{ matrix.triplet }}${{ matrix.extension}}'

  release-nightly:
    name: "Nightly release"
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/download-artifact@v3

      - name: "Rename"
        run: |
          ls -lah
          mv flexfringe-x64-windows flexfringe-x64-windows.exe 

      - name: "Publish"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build"
          files: |
            flexfringe-x64-linux
            flexfringe-x64-osx
            flexfringe-x64-windows.exe
